---
import { getCollection } from 'astro:content';

interface Props {
  version?: string;
}

const { version = 'latest' } = Astro.props;
const docs = await getCollection('docs', ({ data }) => data.version === version);

const sortedDocs = docs.sort((a, b) => Number(a.data.order || 0) - Number(b.data.order || 0));

const docsByFolder = sortedDocs.reduce((acc, doc) => {
  if (!doc.slug) return acc;

  const slugParts = doc.slug.split('/');
  const folderPath = slugParts.length > 1 ? slugParts.slice(0, -1).join('/') : 'root';

  if (!acc[folderPath]) acc[folderPath] = [];
  acc[folderPath].push(doc);

  return acc;
}, {} as Record<string, typeof docs>);

const orderedDocsByFolder = Object.entries(docsByFolder).sort(([a], [b]) => {
  const numA = parseInt(a.match(/\d+$/)?.[0] ?? "0", 10);
  const numB = parseInt(b.match(/\d+$/)?.[0] ?? "0", 10);
  
  const prefixA = a.replace(/\d+$/, "");
  const prefixB = b.replace(/\d+$/, "");

  return prefixA.localeCompare(prefixB) || numA - numB;
});
---

<!-- Navbar -->
<nav class="bg-[#1E1E2E] text-white fixed top-0 left-0 right-0 h-14 shadow-md z-10">
  <div class="flex items-center justify-between px-6 h-full">
    <!-- Botão para abrir o menu no mobile -->
    <button id="openMenu" class="md:hidden text-white p-2 rounded focus:outline-none" aria-label="Open menu">
      ☰
    </button>

    <!-- Logo e título -->
    <a href="/" class="text-lg font-semibold hover:text-gray-300 transition">
      IA Docs
    </a>
    <a 
      href="/"
      class="block px-4 py-2 text-gray-300 hover:bg-[#3F3F5B] hover:text-white rounded-md transition duration-200"
    >
      Home
    </a>
  </div>
</nav>

<!-- Sidebar -->
<aside id="sidebarMenu" class="fixed top-14 left-0 h-full w-64 bg-[#1E1E2E] text-white shadow-lg transform -translate-x-full transition-transform duration-300 md:translate-x-0 md:relative md:shadow-none overflow-y-auto">
  <div class="p-4">
    <div id="search" class="pagefind-ui"></div>
  </div>

  <ul class="space-y-4 p-4">
    {orderedDocsByFolder.length > 0 ? (
      orderedDocsByFolder.map(([folder, docs]) => (
        <li key={folder}>
          <h3 class="text-gray-400 text-sm uppercase font-semibold px-4 py-2">{folder}</h3>
          <ul class="space-y-2 pl-4">
            {docs.map((doc) => (
              <li key={doc.slug}>
                <a 
                  href={`/docs/${doc.slug}`}
                  class="block px-4 py-2 text-gray-300 hover:bg-[#3F3F5B] hover:text-white rounded-md transition duration-200"
                >
                  {doc.data.title}
                </a>
              </li>
            ))}
          </ul>
        </li>
      ))
    ) : (
      <p class="text-gray-500 px-4">Nenhuma documentação encontrada.</p>
    )}
  </ul>
</aside>

<!-- Conteúdo Principal -->
<main class="pt-14">
  <slot />
</main>

<script>
  const openMenuButton = document.getElementById('openMenu');
  const menu = document.getElementById('sidebarMenu');
  const body = document.body;

  openMenuButton?.addEventListener('click', () => {
    menu?.classList.toggle('-translate-x-full');
    body.classList.toggle('no-scroll');
  });

  document.addEventListener('click', (e) => {
    if (!menu.contains(e.target) && !openMenuButton.contains(e.target) && window.innerWidth < 768) {
      menu.classList.add('-translate-x-full');
      body.classList.remove('no-scroll');
    }
  });
</script>

<style is:global>
  body.no-scroll {
    overflow: hidden;
  }
  nav {
    height: 56px;
  }

  main {
    padding-top: 56px;
  }

  #sidebarMenu {
    background-color: #1E1E2E;
    color: #FFFFFF;
  }

  li a {
    font-size: 16px;
    font-weight: 500;
    display: block;
    border-radius: 8px;
    transition: all 0.3s ease-in-out;
  }

  li a:hover {
    transform: translateX(5px);
  }

  @media (max-width: 768px) {
    aside {
      width: 250px;
      z-index: 20;
    }
  }

  @media (min-width: 768px) {
    #openMenu {
      display: none;
    }
  }
</style>
