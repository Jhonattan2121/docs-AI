---
import { getCollection } from 'astro:content';
interface Props {
  version?: string;
}
const { version = 'latest' } = Astro.props;
const docs = await getCollection('docs', ({ data }) => data.version === version);
const sortedDocs = docs.sort((a, b) => (a.data.order || 0) - (b.data.order || 0));
console.log('Navigation docs:', docs.map(d => ({
  slug: d.slug,
  title: d.data.title,
  version: d.data.version
})));
---

<nav id="sidebarMenu" class="fixed top-0 left-0 h-full bg-[#1E1E2E] text-white shadow-lg transform -translate-x-full transition-transform duration-300 md:translate-x-0 md:relative md:shadow-none md:w-64 z-20 overflow-y-auto">
  <div class="p-4 flex items-center justify-between md:hidden">
    <h2 class="text-lg font-semibold">Menu</h2>
    <button id="closeMenu" class="text-gray-300 hover:text-white">
      ✕
    </button>
  </div>

  <div class="p-4 hidden md:block">
    <div id="search" class="pagefind-ui"></div>
  </div>

  <ul class="space-y-2 p-4">
    {sortedDocs.map((doc) => {
      const [version, ...slugParts] = doc.slug.split('/');
      const slug = slugParts.join('/');
      return (
        <li key={doc.slug}>
          <a 
            href={`/docs/${version}/${slug}`}
            class="block px-4 py-2 text-gray-300 hover:bg-[#3F3F5B] hover:text-white rounded-md transition duration-200"
          >
            {doc.data.title}
          </a>
        </li>
      );
    })}
    <li>
      <a 
        href="/"
        class="block px-4 py-2 text-gray-300 hover:bg-[#3F3F5B] hover:text-white rounded-md transition duration-200"
      >
        Home
      </a>
    </li>
  </ul>
</nav>

<button id="openMenu" class="fixed top-4 left-4 bg-[#32CD32] text-white p-3 rounded-md md:hidden z-10 hover:bg-[#28A428]">
  ☰
</button>

<script>
  const openMenuButton = document.getElementById('openMenu');
  const closeMenuButton = document.getElementById('closeMenu');
  const menu = document.getElementById('sidebarMenu');
  const body = document.body;

  openMenuButton?.addEventListener('click', () => {
    menu?.classList.remove('-translate-x-full');
    body.classList.add('no-scroll'); 
  });

  closeMenuButton?.addEventListener('click', () => {
    menu?.classList.add('-translate-x-full');
    body.classList.remove('no-scroll'); 
  });
</script>

<style is:global>
  #homeButton, #openMenu {
    padding: 10px 15px;
    border-radius: 5px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
    transition: background-color 0.3s ease;
  }

  #sidebarMenu {
    background-color: #1E1E2E;
    color: #FFFFFF;
  }

  li a {
    font-size: 16px;
    font-weight: 500;
    display: block;
    border-radius: 8px;
    transition: all 0.3s ease-in-out;
  }

  li a:hover {
    transform: translateX(5px);
  }

  @media (max-width: 768px) {
    nav {
      width: 250px;
      z-index: 20;
    }

    #openMenu {
      z-index: 10; 
    }
  }

  @media (min-width: 768px) {
    #openMenu {
      display: none; 
    }

    #sidebarMenu {
      transform: none; 
    }
  }
</style>
