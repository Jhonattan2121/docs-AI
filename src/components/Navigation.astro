---
import { getCollection } from 'astro:content';

// Get the language based on the current URL
const currentPath = Astro.url.pathname; // Example: "/docs/en/intro", "/docs/pt/intro", "/docs/lg/intro"
const lang = currentPath.includes('/pt/') ? 'pt' : currentPath.includes('/lg/') ? 'lg' : 'en';

// Define the URL to switch between languages
const langSwitchUrl = {
  en: currentPath.replace('/docs/pt/', '/docs/en/').replace('/docs/lg/', '/docs/en/'),
  pt: currentPath.replace('/docs/en/', '/docs/pt/').replace('/docs/lg/', '/docs/pt/'),
  lg: currentPath.replace('/docs/en/', '/docs/lg/').replace('/docs/pt/', '/docs/lg/')
};

interface Props {
  version?: string;
}

const { version = 'latest' } = Astro.props;
const docs = await getCollection('docs', ({ data }) => data.version === version && data.lang === lang);

const sortedDocs = docs.sort((a, b) => Number(a.data.order || 0) - Number(b.data.order || 0));

const docsByFolder = sortedDocs.reduce((acc, doc) => {
  if (!doc.slug) return acc;

  const slugParts = doc.slug.split('/');
  const filteredParts = slugParts.filter(part => !['en', 'pt', 'lg'].includes(part)); // Remove o idioma
  const folderPath = filteredParts.length > 1 ? filteredParts.slice(0, -1).join('/') : 'root';

  if (!acc[folderPath]) acc[folderPath] = [];
  acc[folderPath].push(doc);

  return acc;
}, {} as Record<string, typeof docs>);

const orderedDocsByFolder = Object.entries(docsByFolder).sort(([a], [b]) => {
  const numA = parseInt(a.match(/\d+$/)?.[0] ?? "0", 10);
  const numB = parseInt(b.match(/\d+$/)?.[0] ?? "0", 10);
  
  const prefixA = a.replace(/\d+$/, "");
  const prefixB = b.replace(/\d+$/, "");

  return prefixA.localeCompare(prefixB) || numA - numB;
});
---

<!-- Navbar -->
<nav class="bg-[#1E1E2E] text-white fixed top-0 left-0 right-0 h-14 shadow-md z-10">
  <div class="flex items-center justify-between px-6 h-full">
    <!-- Button to open the menu on mobile -->
    <button id="openMenu" class="md:hidden text-white  rounded focus:outline-none" aria-label="Open menu">
      â˜°
    </button>
    <!-- Logo and title -->
   <div class="flex items-center space-x-3">
      <img src="https://www.skatehive.app/SKATE_HIVE_VECTOR_FIN.svg" alt="Skatehive Logo" class="h-12">
      <a href="/" class="text-lg font-semibold hover:text-gray-300 transition">
        IA  Docs
      </a>
    </div>

     <!-- Links Section -->
<div class="hidden md:flex items-center gap-6"> <!-- Adicionado gap-6 para espaÃ§amento uniforme -->
  <a href="https://skatehive.app" 
     class="text-gray-300 hover:text-white transition-colors duration-200 flex items-center gap-2 px-4 py-2 rounded-lg hover:bg-white/10">
    <span>ðŸ›¹</span>
    <span>Skatehive</span>
  </a>
  
  <a href="https://discord.gg/skatehive" 
     class="text-gray-300 hover:text-white transition-colors duration-200 flex items-center gap-2 px-4 py-2 rounded-lg hover:bg-white/10">
    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
      <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515a.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0a12.64 12.64 0 0 0-.617-1.25a.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057a19.9 19.9 0 0 0 5.993 3.03a.078.078 0 0 0 .084-.028a14.09 14.09 0 0 0 1.226-1.994a.076.076 0 0 0-.041-.106a13.107 13.107 0 0 1-1.872-.892a.077.077 0 0 1-.008-.128a10.2 10.2 0 0 0 .372-.292a.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127a12.299 12.299 0 0 1-1.873.892a.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028a19.839 19.839 0 0 0 6.002-3.03a.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.956-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.955-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.946 2.418-2.157 2.418z"/>
    </svg>
    <span>Discord</span>
  </a>
</div>

  

  <!-- Language switch button -->
<div class="relative" style="z-index: 100;">
  <button id="languageButton" 
          class="px-4 py-2 text-gray-300 hover:bg-white/10 rounded-lg transition-all duration-200 flex items-center space-x-2 group">
    <img src={lang === 'en' ? 'https://flagcdn.com/us.svg' : 
              lang === 'pt' ? 'https://flagcdn.com/br.svg' : 
              'https://flagcdn.com/ug.svg'} 
         alt={lang} 
         class="w-5 h-5"/>
    <span class="hidden sm:inline whitespace-nowrap">
      {lang === 'en' ? 'English' : lang === 'pt' ? 'PortuguÃªs' : 'Luganda'}
    </span>
    <svg class="w-4 h-4 transition-transform duration-200 group-hover:rotate-180" 
         fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/>
    </svg>
  </button>

  <div id="languageMenu" 
       class="fixed sm:absolute right-0 mt-2 w-48 bg-[#2D2D44]/95 backdrop-blur-lg rounded-lg shadow-xl 
              transform opacity-0 scale-95 invisible transition-all duration-200 ease-out">
    <a href={langSwitchUrl['en']} class="block px-4 py-2 hover:bg-[#565676] transition flex items-center">
      <img src="https://flagcdn.com/us.svg" alt="English" class="w-5 h-5 mr-2"/>
      English
    </a>
    <a href={langSwitchUrl['pt']} class="block px-4 py-2 hover:bg-[#565676] transition flex items-center">
      <img src="https://flagcdn.com/br.svg" alt="Portuguese" class="w-5 h-5 mr-2"/>
      PortuguÃªs
    </a>
    <a href={langSwitchUrl['lg']} class="block px-4 py-2 hover:bg-[#565676] transition flex items-center">
      <img src="https://flagcdn.com/ug.svg" alt="Luganda" class="w-5 h-5 mr-2"/>
      Luganda
    </a>
  </div>
</div>
  </div>
</nav>



<!-- Sidebar -->
<aside id="sidebarMenu" class="fixed top-14 left-0 h-full w-72 bg-gradient-to-b from-[#1E1E2E] to-[#2D2D44] text-white shadow-lg transform -translate-x-full transition-all duration-300 md:translate-x-0 md:relative md:shadow-xl overflow-y-auto border-r border-gray-800">
  <div >
    <ul class="space-y-6">
      {orderedDocsByFolder.length > 0 ? (
        orderedDocsByFolder.map(([folder, docs]) => (
          <li key={folder} class="section-container">
            <!-- Folder Header -->
            <div class="folder-header flex items-center mb-2 bg-[#2A2A3F] p-2 rounded-lg">
              <h3 class="text-gray-200 text-sm uppercase font-bold tracking-wider">{folder}</h3>
            </div>
            <!-- Docs List -->
            <ul class="space-y-1 ">
              {docs.map((doc) => (
                <li key={doc.slug} class="doc-item">
                  <a 
                  href={`/docs/${doc.slug}`}
                  class={`block px-4 py-2 text-gray-300 hover:bg-[#3F3F5B] hover:text-white rounded-md transition duration-200 ${
                    currentPath.includes(doc.slug) ? 'bg-[#565676]' : ''
                  }`}
                >
                   
                    {doc.data.title}
                  </a>
                </li>
              ))}
            </ul>
          </li>
        ))
      ) : (
        <p class="text-gray-500 px-4">No documentation found.</p>
      )}
    </ul>
  </div>
</aside>

<!-- Main Content -->
<main class="pt-14">
  <slot />
</main>

<script>
 document.addEventListener("DOMContentLoaded", () => {
    const languageButton = document.getElementById("languageButton");
    const languageMenu = document.getElementById("languageMenu");

    let isMenuOpen = false;

    languageButton.addEventListener("click", (event) => {
      event.stopPropagation();
      isMenuOpen = !isMenuOpen;
      languageMenu.classList.toggle("hidden", !isMenuOpen);
    });

    document.addEventListener("click", (event) => {
      if (!languageMenu.contains(event.target) && !languageButton.contains(event.target)) {
        isMenuOpen = false;
        languageMenu.classList.add("hidden");
      }
    });
  });

  const openMenuButton = document.getElementById('openMenu');
  const menu = document.getElementById('sidebarMenu');
  const body = document.body;

  openMenuButton?.addEventListener('click', () => {
    menu?.classList.toggle('-translate-x-full');
    body.classList.toggle('no-scroll');
  });

  document.addEventListener('click', (e) => {
    if (!menu.contains(e.target) && !openMenuButton.contains(e.target) && window.innerWidth < 768) {
      menu.classList.add('-translate-x-full');
      body.classList.remove('no-scroll');
    }
  });
</script>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const languageButton = document.getElementById('languageButton');
  const languageMenu = document.getElementById('languageMenu');
  const sidebarMenu = document.getElementById('sidebarMenu');

  let isMenuOpen = false;

  languageButton?.addEventListener('click', (event) => {
    event.stopPropagation();
    isMenuOpen = !isMenuOpen;
    languageMenu?.classList.toggle('visible');
    
    if (window.innerWidth <= 768) {
      languageMenu.style.zIndex = '1000';
    }
  });

  document.addEventListener('click', (event) => {
    if (!languageMenu?.contains(event.target) && !languageButton?.contains(event.target)) {
      isMenuOpen = false;
      languageMenu?.classList.remove('visible');
    }
  });

  window.addEventListener('resize', () => {
    if (window.innerWidth > 768) {
      languageMenu?.classList.remove('visible');
      isMenuOpen = false;
    }
  });
});
</script>

<!-- Ajuste na lÃ³gica de navegaÃ§Ã£o -->
<script>
document.addEventListener('DOMContentLoaded', () => {
  const path = window.location.pathname;
  const isForkSkatehivePage = path.includes('/fork-skatehive');
  
  if (isForkSkatehivePage) {
    const sidebarMenu = document.getElementById('sidebarMenu');
    const navbar = document.querySelector('nav');
    
    if (sidebarMenu) {
      sidebarMenu.style.zIndex = '30';
      sidebarMenu.style.top = '56px';
      
      sidebarMenu.style.maxHeight = 'calc(100vh - 56px)';
      sidebarMenu.style.overflowY = 'auto';
    }

    if (navbar) {
      navbar.style.zIndex = '40';
    }
  }
});
</script>

<style is:global>
  body.no-scroll {
    overflow: hidden;
  }
  nav {
    height: 56px;
  }

  main {
    padding-top: 56px;
  }

  #sidebarMenu {
    background-color: #1E1E2E;
    color: #FFFFFF;
  }

   /* Mobile Styles */
  @media (max-width: 768px) {
    #sidebarMenu {
    width: 250px; 
      z-index: 20;
      position: fixed; 
      top: 56px;  
      left: 0;
      height: calc(100vh - 56px); /* A altura da sidebar ocupa o restante da tela, descontando a altura da navbar */
      overflow-y: auto; 
    }

    #sidebarMenu.-translate-x-full {
      transform: translateX(-100%);
    }

    /* Menu abrir/fechar */
    #openMenu {
      display: block;
    }
  }

  li a {
    font-size: 16px;
    font-weight: 500;
    display: block;
    border-radius: 8px;
    transition: all 0.3s ease-in-out;
  }

  li a:hover {
    transform: translateX(5px);
  }

  @media (max-width: 768px) {
    aside {
      width: 250px;
      z-index: 20;
    }
  }

  @media (min-width: 768px) {
    #openMenu {
      display: none;
    }
  }

  #sidebarMenu {
    scrollbar-width: thin;
    scrollbar-color: #565676 #1E1E2E;
  }

  #sidebarMenu::-webkit-scrollbar {
    width: 6px;
  }

  #sidebarMenu::-webkit-scrollbar-track {
    background: #1E1E2E;
  }

  #sidebarMenu::-webkit-scrollbar-thumb {
    background-color: #565676;
    border-radius: 6px;
  }

  .section-container:last-child {
    border-bottom: none;
  }

  .folder-header {
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .folder-header:hover {
    background-color: #3F3F5B;
  }

  .doc-item a {
    position: relative;
    overflow: hidden;
  }

  .doc-item a::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 0;
    background-color: rgba(255, 255, 255, 0.1);
    transition: width 0.2s ease;
  }

  .doc-item a:hover::before {
    width: 100%;
  }

  @media (max-width: 768px) {
    #sidebarMenu {
      width: 280px;
      box-shadow: 2px 0 8px rgba(0,0,0,0.3);
    }
  }
</style>

<style>
.visible {
  visibility: visible !important;
  opacity: 1 !important;
  transform: scale(100%) !important;
  z-index: 1000;
}

@media (max-width: 768px) {
  #languageMenu {
    position: fixed;
    top: 60px; 
    right: 10px;
    width: auto;
    min-width: 200px;
  }
  
  #sidebarMenu {
    width: 280px;
    box-shadow: 2px 0 8px rgba(0,0,0,0.3);
    z-index: 40;
  }
}

@media (max-width: 400px) {
  [data-page="fork-skatehive"] #sidebarMenu {
    position: fixed;
    width: 280px;
    height: calc(100vh - 56px);
    top: 56px;
    left: 0;
    z-index: 30;
    transform: translateX(-100%);
    transition: transform 0.3s ease;
  }

  [data-page="fork-skatehive"] #sidebarMenu.active {
    transform: translateX(0);
  }

  [data-page="fork-skatehive"] .content-wrapper {
    margin-left: 0;
    width: 100%;
    transition: margin-left 0.3s ease;
  }

  body.menu-open {
    overflow: hidden;
  }
}

nav { z-index: 40 !important; }
#sidebarMenu { z-index: 30; }
#languageMenu { z-index: 50 !important; }

#languageMenu {
  z-index: 50 !important;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const path = window.location.pathname;
 if (path.includes('/fork-skatehive')) {
  sidebarMenu.style.zIndex = '30';
  sidebarMenu.style.top = '56px';
}
  
  const openMenuButton = document.getElementById('openMenu');
  const sidebarMenu = document.getElementById('sidebarMenu');
  
  openMenuButton?.addEventListener('click', () => {
    if (path.includes('/fork-skatehive')) {
      sidebarMenu?.classList.toggle('active');
      document.body.classList.toggle('menu-open');
    }
  });
});
</script>

<!-- Simplifique o JavaScript -->
<script>
document.addEventListener('DOMContentLoaded', () => {
  const path = window.location.pathname;
  const isForkSkatehive = path.includes('/fork-skatehive');
  
  if (isForkSkatehive) {
    document.body.setAttribute('data-page', 'fork-skatehive');
  }

  const openMenuButton = document.getElementById('openMenu');
  const sidebarMenu = document.getElementById('sidebarMenu');
  
  openMenuButton?.addEventListener('click', () => {
    sidebarMenu?.classList.toggle('active');
    document.body.classList.toggle('menu-open');
  });
});
</script>
